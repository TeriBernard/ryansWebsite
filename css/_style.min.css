/* **************** 
    BASE / GENERAL
****************** */

/* 
    Resets and normalizes styles across browsers to make design consistent.
    It's minimal but bare in mind this sets css on every single element individually(not cascading),
    so only use this when absolutely needed because it does affect display times.
*/
* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/* In contrast to '*', this will cascade to lower elements. */
body {
    font-family: 'Roboto', sans-serif;
    font-size: 18px;
    overflow-x: hidden;  /* makes Horizontal scroll bar go away on Windows */
}
/* **************** 
    COLORS
****************** */
/* 
    It's easiest for me to preface a color with
        bg-(color name)
        border-(color name)
        text-(color name)

But it does bloat the file if the color isn't needed for all three,
so I try to only add what I need.
*/

/* matches logo color. Leveing for now, but probably don't need. */
.text-logo-red {
    color: rgb(147, 56, 50);
}
.bg-logo-red {
    background-color: rgb(147, 56, 50);
}
.border-logo-red {
    border-color: rgb(147, 56, 50);
}


/* Primary color(started as red) */
.text-primary{
    color: rgb(147, 56, 50);
}
.bg-primary {
    background-color: rgb(147, 56, 50);
}
.border-primary {
    border-color: rgb(147, 56, 50);
}

/* Secondary color(gallery background, 'contact' heading color, ...etc) */
.text-secondary{
    color: rgb(45,45,45);
}
.bg-secondary {
    background-color: rgb(45,45,45);
}
.border-secondary {
    border-color: rgb(45,45,45);
}

/* Third...ary color(contact background) */
.text-tertiary{
    color: rgb(240,240,240);
}
.bg-tertiary {
    background-color: rgb(240,240,240);
}
.border-tertiary {
    border-color: rgb(240,240,240);
}

/*  Can add this class to an element to change font.
Didn't name it after the font itself in case the font is changed. 
The 'h' is for 'heading'. */
.h-font {
    font-family: 'Raleway', sans-serif;
    font-weight: bold;
}/* **************** 
    ABOVE FOLD / LANDING
****************** */

header.above-fold {
    min-height: 100vh;
    width: 100%;
    display: flex;
    /* Children with position:absolute will be relative to this element. */
    position: relative;
    /* This is important. 
    Even though elements will be stacked on small screens, setting this to 'row' means it will be trying to display them side-by-side. */
    flex-direction: row;
    /* Also important. If blocks aren't stacking, this isn't set to wrap so flexbox is forcing them into rows. */
    flex-wrap: wrap;

    background-color: rgb(245,231,217);
    background: linear-gradient(rgba(245,231,217,.8), rgba(245,231,217,0.8)), url('../img/header/working.jpg');
    background-size: cover;
    background-position-x: 22%;
}

/* This is why I love flex-box. I don't even need media queries for this:
 These main blocks are side-by-side when able, otherwise(i.e. small screens) they stack. */
 .above-fold-block {
    position: relative;
    /* min-height: 49vh; */
    /* Makes block take up full amount of available space, both stacked and in row. */
    flex-grow: 1;
    padding: 2%;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    min-width: 49vw;
}
/* For stupid Internet Explorer */
@media screen and (min-width: 1220px) {
    .above-fold-block {
        min-height: 100vh;
        width: 49vw;
    }
}


/* ABOVE FOLD LOGO BLOCK */
header .logo-block {
    /* background: linear-gradient(rgba(245,231,217,.8), rgba(245,231,217,0.8)), url('../img/header/working.jpg');
    background-size: cover;
    background-position-x: 22%; */
}

/* Personal preference, I think it's easier to work with images when they're wrapped. */
.logo-img-wrapper {
    width: 90%;
    /* Setting 'width' as a percentage and 'max-width' as a hard value avoids having to set a media query for responsiveness.  
    Using vh for these specific ratios is just more dynamic, but I'm using a px fallback in case the browser doesn't support vh/vw.
    */
    max-width: 700px;
    max-width: 68vh;
    padding: 10vh 0 0;
}
/* Restricts image to not be larger than wrapper. 
Using 'max-*' instead of explicit percentages keeps ratio correct. */
.logo-img-wrapper img {
    max-width: 100%;
    max-height: 100%;
}


/* ABOVE FOLD DESCRIPTION BLOCK */
header .description-block {
    flex-direction: column;
    padding: 10vh 2% 4%;
    background-color: rgba(250,250,250,.8);
}

/* Sections that make up the top header bar */
.head-bar {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 9vh;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    background-color: rgb(255,255,255);
}
.head-item {
    margin-top: 5px;
    margin-bottom: 5px;
    font-size: 22px;
}

/*  DESCRIPTION BLOCK NAV */
.nav-item {
    margin-left:  20px;
    margin-right: 20px;
    padding: 5px;
    text-decoration: none;
    border-bottom-width: 1px;
    border-bottom-style: solid;
    text-shadow: 0px 0px 1px rgba(0,0,0,.3);
    box-shadow: 0 6px 8px -6px rgba(70, 70, 70, 0.7);
    font-size: 18px;
}
/* Effects are cool, but also add a ton for the 'feel' of the site.
Just gotta keep 'em snappy. */
.nav-item:hover {
    transition: text-shadow .1s, box-shadow .1s;
    text-shadow: 0px 0px 1px rgba(0,0,0,.5);
    box-shadow: 0 7px 8px -6px rgba(129, 55, 40, 1);
}

/*  DESCRIPTION BLOCK TEXT */
.description-block .description-text-wrapper{
    width: 90%;
    max-width: 500px;
    padding-bottom: 4vh;
}
.description-text-wrapper .description-heading {
    font-size: 12vw;
    /* Helps offset the white .head-bar space */
    padding-top: 4vh;
}
@media screen and (min-width: 475px) {
    .description-text-wrapper .description-heading  {
        font-size: 60px;
    }
}
.description-block .description-text-wrapper p {
    margin-top: 20px;
}/* **************** 
    GALLERY
****************** */

#gallery{
    padding: 6vh 0;
    text-align: center;
}
.gallery-head-wrap {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;

    margin-bottom: 25px;
}
.gallery-heading {
    font-size: 16vw;
    color: rgb(255,255,255);
}
@media screen and (min-width: 460px) {
    .gallery-heading {
        font-size: 73px;
    }
}

#gallery .instructions {
    margin-top: 20px;
    margin-left: 40px;

    color: rgb(255,255,255);
} 

.gallery-wrapper {
    margin-top: 30px;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    width: 100%;
}

/*  ========= 
 IMAGE SWITCHER
=========== */

/* Main css  */
.e-i-s {
    position: relative;
    width: 99vw;
    height: 66vw;
    max-width: 900px;
    max-height: 600px;
    overflow: hidden;
    box-shadow: 1px 1px 3px 1px rgba(0,0,0,.4);
    margin: 8px;
}
@media screen and (min-width: 1400px){
    .e-i-s {
        width: 49vw;
        height: 32.8vw;
    }
}

/* Because this is skewed the hover effect will leave a corner with the 'revert-trigger' exposed */
.e-i-s .switch-trigger {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    min-width: 100px;
    width: 21%;
    height: 100%;
    
    transition: all .3s ease 0s;
    z-index: 150;
    transform: skewX(-45deg);
    transform-origin: top left;

    background-color: rgba(0,0,0,0);

}

/* Remember this doesn't really do anything, because the
switch is triggered on hover */
.e-i-s .revert-trigger {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    z-index: 100;
}

/* Images base */
.e-i-s .img-wrapper {
    position: absolute;
    width: 100%;
    height: 100%;
    transition: all .3s ease 0s;
}
.e-i-s .img-wrapper img {
    min-width: 100%;
    max-height: 100%;
    
}
.e-i-s .img-wrapper.before {
    opacity: 1;
    z-index: 17;
}
.e-i-s .img-wrapper.after {
    opacity: 0;
    z-index: 10;
}

/* Arrow wrappers */
.e-i-s .arrow-back {
    position: absolute;
    z-index: 50;
    transition: all .3s ease 0s;
    border-radius: 50%;
}
.e-i-s .arrow-back.trigger {
    top: 1%;
    left: 1%;
    padding: 15px;
    background-color: rgba(0,0,0,.8);
    color: rgba(255,255,255,1);
    opacity: 1;
    box-shadow: 0px 0px 1px 1px rgba(255, 158, 76,.7);
}
.e-i-s .arrow-back.revert {
    bottom: 0%;
    right: 0%;
    padding: 30px;
    background-color: rgba(2555,255,255,0);
    color: rgba(255,255,255,0);
    opacity: 0;
    box-shadow: 0px 0px 1px 1px rgba(255, 255, 255,0);
}

/* Effects */
.e-i-s .switch-trigger:hover {
    width: 131% !important;
}

.e-i-s .switch-trigger:hover ~ .arrow-back.trigger {
    top: 0% !important;
    left: 0% !important;
    padding: 30px !important;
    background-color: rgba(2555,255,255,0) !important;
    color: rgba(255,255,255,0) !important;
    opacity: 0 !important;
    box-shadow: 0px 0px 1px 1px rgba(255, 255, 255,0) !important;
}
.e-i-s .switch-trigger:hover ~ .arrow-back.revert {
    bottom: 1% !important;
    right: 1% !important;
    padding: 15px !important;
    background-color: rgba(0,0,0,.8) !important;
    color: rgba(255,255,255, 1) !important;
    box-shadow: 0px 0px 1px 1px rgba(255, 158, 76,.7) !important;
    opacity: 1 !important;
}

.e-i-s .switch-trigger:hover ~ .img-wrapper.before {
    opacity: 0 !important;
    z-index: 10 !important;
}
.e-i-s .switch-trigger:hover ~ .img-wrapper.after {
    opacity: 1 !important;
    z-index: 17 !important;
}
#contact {
    /* Fallback for no vh */
    min-height: 900px;
    min-height: 50vh;
    padding: 6vh 0;
    position: relative;
}

.contact-heading {
    font-size: 14.5vw;
    text-align: center;
}
@media screen and (min-width: 460px){
    .contact-heading {
        font-size: 73px;
    }
}

.contact-invite-text {
    width: 87%;
    font-size: 22px;
    margin: 5px auto; 
    max-width: 400px;
}

.contact-form {
    width: 95%;
    max-width: 400px;
    margin: 10px auto;
    display: flex;
    flex-direction: column;
}
.contact-form input,
.contact-form textarea {
    padding: 5px 7px ;
    border-radius: 2px;
    border-width: 0;
    box-shadow: 0 1px 3px 0px rgba(0,0,0,.3);
}


.input-block {
    width: 100%;
    margin: 5px 0 10px;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
}
.input-heading {
    font-size: .9rem;
    min-width: 70px;
    text-align: left;
}

.contact-form input {
    padding: 5px;
    margin-top: 3px;
    flex-grow: 1;
    font-size: 16px;
}

.contact-blurb {
    resize: vertical;
    min-height: 100px;
    font-family: 'Roboto', sans-serif;
    font-size: 16px;
}



/* For when the form becomese valid */
.center-text{
    text-align: center;
}

.fade-base {
    transition: top 1s, opacity .5s, max-height 1s;
    opacity: 0;
    z-index: 1;
    overflow: hidden;
    max-height: 0px;
}

.fade-reveal {
    /* With a max-height fade animated so long(relatively speaking), 
    it shows the animation then closes the element from interaction. */
    transition: top 1s, opacity .5s, max-height 1s;
    opacity: 1;
    z-index: 100;
    overflow: hidden;
    /* top: 40px; */
    /* position: absolute; */
    max-height: 800px;
}



.contact-form .submit-btn {
    padding: 10px; 
    box-shadow: 0 1px 3px 0px rgba(0,0,0,.3);
    color: rgb(250,250,250);
    border: 0;
    border-radius: 2px;
    font-size: 20px;
    right: 0px;
    align-self: flex-end;
    cursor: pointer;
}
.contact-form .submit-btn:hover{
    box-shadow: 0 1px 2px 1px rgba(0,0,0,.5);
}



/* Status blocks */
#contact-status-loading {    
    text-align: center;
    font-size: 28px;
    color: rgb(191, 93, 45);
}


.invalid-input {
    box-shadow: 0 0px 2px 1px rgb(255, 0, 0) !important;
}

.email-status-block {
    width: 95%; 
    margin: auto;
    text-align: center;
}

footer {
    text-align: center;
    font-size: 15px;
    color: rgb(100,100,100);
    padding: 40px 0;
    
}

footer .design-by {
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin-top: 15px;
}
