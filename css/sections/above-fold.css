/* **************** 
    ABOVE FOLD / LANDING
****************** */

header.above-fold {
    min-height: 100vh;
    width: 100%;
    display: flex;
    /* Children with position:absolute will be relative to this element. */
    position: relative;
    /* This is important. 
    Even though elements will be stacked on small screens, setting this to 'row' means it will be trying to display them side-by-side. */
    flex-direction: row;
    /* Also important. If blocks aren't stacking, this isn't set to wrap so flexbox is forcing them into rows. */
    flex-wrap: wrap;

    background-color: rgb(245,231,217);
    background: linear-gradient(rgba(245,231,217,.8), rgba(245,231,217,0.8)), url('../img/header/working.jpg');
    background-size: cover;
    background-position-x: 22%;
}

/* This is why I love flex-box. I don't even need media queries for this:
 These main blocks are side-by-side when able, otherwise(i.e. small screens) they stack. */
 .above-fold-block {
    position: relative;
    /* min-height: 49vh; */
    /* Makes block take up full amount of available space, both stacked and in row. */
    flex-grow: 1;
    padding: 2%;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    min-width: 49vw;
}
/* For stupid Internet Explorer */
@media screen and (min-width: 1220px) {
    .above-fold-block {
        min-height: 100vh;
        width: 49vw;
    }
}


/* ABOVE FOLD LOGO BLOCK */
header .logo-block {
    /* background: linear-gradient(rgba(245,231,217,.8), rgba(245,231,217,0.8)), url('../img/header/working.jpg');
    background-size: cover;
    background-position-x: 22%; */
}

/* Personal preference, I think it's easier to work with images when they're wrapped. */
.logo-img-wrapper {
    width: 90%;
    /* Setting 'width' as a percentage and 'max-width' as a hard value avoids having to set a media query for responsiveness.  
    Using vh for these specific ratios is just more dynamic, but I'm using a px fallback in case the browser doesn't support vh/vw.
    */
    max-width: 700px;
    max-width: 68vh;
    padding: 10vh 0 0;
}
/* Restricts image to not be larger than wrapper. 
Using 'max-*' instead of explicit percentages keeps ratio correct. */
.logo-img-wrapper img {
    max-width: 100%;
    max-height: 100%;
}


/* ABOVE FOLD DESCRIPTION BLOCK */
header .description-block {
    flex-direction: column;
    padding: 10vh 2% 4%;
    background-color: rgba(250,250,250,.8);
}

/* Sections that make up the top header bar */
.head-bar {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 9vh;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    background-color: rgb(255,255,255);
}
.head-item {
    margin-top: 5px;
    margin-bottom: 5px;
    font-size: 22px;
}

/*  DESCRIPTION BLOCK NAV */
.nav-item {
    margin-left:  20px;
    margin-right: 20px;
    padding: 5px;
    text-decoration: none;
    border-bottom-width: 1px;
    border-bottom-style: solid;
    text-shadow: 0px 0px 1px rgba(0,0,0,.3);
    box-shadow: 0 6px 8px -6px rgba(70, 70, 70, 0.7);
    font-size: 18px;
}
/* Effects are cool, but also add a ton for the 'feel' of the site.
Just gotta keep 'em snappy. */
.nav-item:hover {
    transition: text-shadow .1s, box-shadow .1s;
    text-shadow: 0px 0px 1px rgba(0,0,0,.5);
    box-shadow: 0 7px 8px -6px rgba(129, 55, 40, 1);
}

/*  DESCRIPTION BLOCK TEXT */
.description-block .description-text-wrapper{
    width: 90%;
    max-width: 500px;
    padding-bottom: 4vh;
}
.description-text-wrapper .description-heading {
    font-size: 12vw;
    /* Helps offset the white .head-bar space */
    padding-top: 4vh;
}
@media screen and (min-width: 475px) {
    .description-text-wrapper .description-heading  {
        font-size: 60px;
    }
}
.description-block .description-text-wrapper p {
    margin-top: 20px;
}